import * as React from "react"; import { motion , addPropertyControls , cx , useVariantState , useAddVariantProps , useActiveVariantCallback , withCSS , LayoutGroup , ControlType , Vector , Text as Text1 , Stack } from "framer"; const cycleOrder = ["R9fGlnvBJ", "Vp5z0P0p2", "pZBABYUn9", "byzXdN3To"]; const variantClassNames = {R9fGlnvBJ: "framer-v-1ttsotw", Vp5z0P0p2: "framer-v-lwabku", pZBABYUn9: "framer-v-jhvhd5", byzXdN3To: "framer-v-15tw3g4"}; const humanReadableVariantMap = {Bottom: "R9fGlnvBJ", Top: "Vp5z0P0p2", Left: "pZBABYUn9", Right: "byzXdN3To"}; const transitions = {default: {type: "spring", ease: [0.44, 0, 0.56, 1], duration: 0.3, delay: 0, stiffness: 500, damping: 60, mass: 1}}; const Component = React.forwardRef(function ({ style, className, layoutId, width, height, variant: outerVariant = "R9fGlnvBJ", label: FRslX1v7e = "Label", ...restProps }, ref) { const outerVariantId = humanReadableVariantMap[outerVariant]; const variant = outerVariantId || outerVariant; const { variants, baseVariant, gestureVariant, classNames, transition, setVariant, setGestureState } = useVariantState({defaultVariant: "R9fGlnvBJ", variant, transitions, variantClassNames, cycleOrder}); const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant); const addVariantProps = useAddVariantProps(baseVariant, gestureVariant, {Vp5z0P0p2: {pgjym0Q_o: {rect: {x: 0, y: 0, width: 12, height: 10}}, H4uQ2ZgXj: {rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: hsl(0, 0%, 100%); font-family: &quot;Inter&quot;, sans-serif; font-size: 14px; font-style: normal; font-weight: 500; letter-spacing: 0px; line-height: 1.2'>Label</span><br></div></div>", fonts: ["GF;Inter-500"]}}, pZBABYUn9: {Jki1PKRQY: {rect: {x: -1, y: 1.5, width: 12, height: 10}}, H4uQ2ZgXj: {rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: hsl(0, 0%, 100%); font-family: &quot;Inter&quot;, sans-serif; font-size: 14px; font-style: normal; font-weight: 500; letter-spacing: 0px; line-height: 1.2'>Label</span><br></div></div>", fonts: ["GF;Inter-500"]}}, byzXdN3To: {H4uQ2ZgXj: {rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: hsl(0, 0%, 100%); font-family: &quot;Inter&quot;, sans-serif; font-size: 14px; font-style: normal; font-weight: 500; letter-spacing: 0px; line-height: 1.2'>Label</span><br></div></div>", fonts: ["GF;Inter-500"]}, wlda5GaBR: {rect: {x: -2, y: 1.5, width: 12, height: 10}}}}); return React.createElement(LayoutGroup, {id: layoutId}, React.createElement(motion.div, {initial: variant, animate: variants, className: cx("framer-foNBd", classNames), style: {display: "contents"}, onHoverStart: () => { return setGestureState({isHovered: true}); }, onHoverEnd: () => { return setGestureState({isHovered: false}); }, onTapStart: () => { return setGestureState({isPressed: true}); }, onTap: () => { return setGestureState({isPressed: false}); }, onTapCancel: () => { return setGestureState({isPressed: false}); }}, React.createElement(Stack, Object.assign({}, restProps, {layoutId: "R9fGlnvBJ", style: {rotate: 0, ...style}, className: cx("framer-1ttsotw", className), background: null, direction: "vertical", distribution: "center", alignment: "center", gap: 0, __fromCanvasComponent: true, __contentWrapperStyle: {width: "100%", height: "100%", padding: "0px 0px 0px 0px"}, center: false, transition, ref}, addVariantProps("R9fGlnvBJ")), baseVariant !== "pZBABYUn9" && baseVariant !== "byzXdN3To" && baseVariant === "Vp5z0P0p2" && React.createElement(motion.div, Object.assign({layoutId: "Y4pcACdLB", style: {}, className: "framer-ns5rdc", layout: "position", background: null, transition}, addVariantProps("Y4pcACdLB")), React.createElement(Vector, Object.assign({style: {}, d: "M 0 9 L 12 9 L 7.664100588675687 2.496150883013531 C 6.872456493076094 1.308684739614142 5.127543506923906 1.308684739614142 4.335899411324313 2.496150883013531 Z", id: "pgjym0Q_o", isRootVectorNode: true, shapeId: "id_pgjym0Q_o", strokeClipId: "id_pgjym0Q_o_clip", rect: {x: 0, y: 0, width: 12, height: 9}, strokeAlpha: 0, name: "Path", rotation: 0, strokeEnabled: false, fill: "#1c1c1c", transition}, addVariantProps("pgjym0Q_o"), {variants: {Vp5z0P0p2: {d: "M 0 9 L 0 10 L 12 10 L 12 9 L 7.664100588675687 2.496150883013531 C 6.872456493076094 1.308684739614142 5.127543506923906 1.308684739614142 4.335899411324313 2.496150883013531 Z"}}}))), React.createElement(Stack, Object.assign({layoutId: "RnNx1vuHy", style: {rotate: 0}, className: "framer-10djddu", background: null, direction: "horizontal", distribution: "center", alignment: "center", gap: 0, __fromCanvasComponent: true, __contentWrapperStyle: {width: "100%", height: "100%", padding: "0px 0px 0px 0px"}, center: false, transition}, addVariantProps("RnNx1vuHy")), baseVariant !== "byzXdN3To" && baseVariant === "pZBABYUn9" && React.createElement(motion.div, Object.assign({layoutId: "Is_z8LKOO", style: {}, className: "framer-pa2eiw", layout: "position", background: null, transition}, addVariantProps("Is_z8LKOO")), React.createElement(Vector, Object.assign({style: {}, d: "M 0 0 L 12 0 L 7.664100588675686 6.503849116986471 C 6.872456493076094 7.691315260385859 5.127543506923906 7.691315260385859 4.335899411324314 6.503849116986471 Z", id: "Jki1PKRQY", isRootVectorNode: true, shapeId: "id_Jki1PKRQY", strokeClipId: "id_Jki1PKRQY_clip", rect: {x: -1.5, y: 2, width: 12, height: 9}, strokeAlpha: 0, name: "Path", rotation: 90, strokeEnabled: false, fill: "#1c1c1c", transition}, addVariantProps("Jki1PKRQY"), {variants: {pZBABYUn9: {d: "M 0 1 L 0 0 L 12 0 L 12 1 L 7.664100588675686 7.503849116986471 C 6.872456493076094 8.69131526038586 5.127543506923906 8.69131526038586 4.335899411324314 7.503849116986471 Z"}}}))), React.createElement(Stack, Object.assign({layoutId: "g76zmQA0F", style: {borderBottomLeftRadius: 9, borderBottomRightRadius: 9, borderTopRightRadius: 9, borderTopLeftRadius: 9, backgroundColor: "rgb(28, 28, 28)", rotate: 0}, className: "framer-1al4lp4", direction: "horizontal", distribution: "center", alignment: "center", gap: 0, __fromCanvasComponent: true, __contentWrapperStyle: {width: "100%", height: "100%", padding: "0px 0px 0px 0px"}, center: false, transition}, addVariantProps("g76zmQA0F")), React.createElement(Text1, Object.assign({layoutId: "H4uQ2ZgXj", style: {rotate: 0}, withExternalLayout: true, verticalAlignment: "top", __fromCanvasComponent: true, fonts: ["GF;Inter-500"], className: "framer-11qbdp", autoSize: true, rawHTML: `<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: hsl(0, 0%, 100%); font-family: &quot;Inter&quot;, sans-serif; font-size: 14px; font-style: normal; font-weight: 500; letter-spacing: 0px; line-height: 1.2'>Label</span><br></div></div>`, text: FRslX1v7e, transition}, addVariantProps("H4uQ2ZgXj")))), baseVariant === "byzXdN3To" && React.createElement(motion.div, Object.assign({layoutId: "TZkBvXA3B", style: {}, className: "framer-q77ftp", layout: "position", background: null, transition}, addVariantProps("TZkBvXA3B")), React.createElement(Vector, Object.assign({style: {}, d: "M 0 9 L 12 9 L 7.664100588675687 2.496150883013531 C 6.872456493076094 1.308684739614142 5.127543506923906 1.308684739614142 4.335899411324313 2.496150883013531 Z", id: "wlda5GaBR", isRootVectorNode: true, shapeId: "id_wlda5GaBR", strokeClipId: "id_wlda5GaBR_clip", rect: {x: -1.5, y: 2, width: 12, height: 9}, strokeAlpha: 0, name: "Path", rotation: 90, strokeEnabled: false, fill: "#1c1c1c", transition}, addVariantProps("wlda5GaBR"), {variants: {byzXdN3To: {d: "M 0 9 L 0 10 L 12 10 L 12 9 L 7.664100588675687 2.496150883013531 C 6.872456493076094 1.308684739614142 5.127543506923906 1.308684739614142 4.335899411324313 2.496150883013531 Z"}}})))), baseVariant !== "Vp5z0P0p2" && baseVariant !== "pZBABYUn9" && baseVariant !== "byzXdN3To" && React.createElement(motion.div, Object.assign({layoutId: "FiqTa841j", style: {}, className: "framer-12zsn9s", layout: "position", background: null, transition}, addVariantProps("FiqTa841j")), React.createElement(Vector, Object.assign({style: {}, d: "M 0 2 L 0 0 L 12 0 L 12 2 L 7.664100588675686 8.503849116986471 C 6.872456493076094 9.69131526038586 5.127543506923906 9.69131526038586 4.335899411324314 8.503849116986471 Z", id: "q_ZGcxezM", isRootVectorNode: true, shapeId: "id_q_ZGcxezM", strokeClipId: "id_q_ZGcxezM_clip", rect: {x: 0, y: -2, width: 12, height: 11}, strokeAlpha: 0, name: "Path", rotation: 0, strokeEnabled: false, fill: "#1c1c1c", transition}, addVariantProps("q_ZGcxezM"))))))); }); const css = `.framer-foNBd [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none;}\n.framer-foNBd .framer-1ttsotw {position: relative; overflow: visible; width: 90px; height: 48px;}\n.framer-foNBd .framer-ns5rdc {position: relative; width: 12px; height: 9px; flex-shrink: 0;}\n.framer-foNBd .framer-10djddu {position: relative; overflow: visible; width: 100%; height: 1px; flex: 1 0 0px;}\n.framer-foNBd .framer-pa2eiw {position: relative; width: 9px; height: 13px; flex-shrink: 0;}\n.framer-foNBd .framer-1al4lp4 {position: relative; overflow: visible; width: 1px; height: 100%; flex: 1 0 0px;}\n.framer-foNBd .framer-11qbdp {position: relative; overflow: visible; width: auto; height: auto; flex-shrink: 0; white-space: pre;}\n.framer-foNBd .framer-q77ftp {position: relative; width: 9px; height: 13px; flex-shrink: 0;}\n.framer-foNBd .framer-12zsn9s {position: relative; width: 12px; height: 9px; flex-shrink: 0;}\n.framer-foNBd.framer-v-jhvhd5 .framer-pa2eiw {width: 9px; height: 13px; right: auto; bottom: auto; left: auto; top: auto; flex-shrink: 0;}\n.framer-foNBd.framer-v-15tw3g4 .framer-pa2eiw {width: 9px; height: 13px; right: auto; bottom: auto; left: auto; top: auto; flex-shrink: 0;}\n.framer-foNBd.framer-v-15tw3g4 .framer-q77ftp {width: 9px; height: 13px; right: auto; bottom: auto; left: auto; top: auto; flex-shrink: 0;}`; const FramerVD22nWCJ6 = withCSS(Component, css); export default FramerVD22nWCJ6; FramerVD22nWCJ6.displayName = "Tooltip"; FramerVD22nWCJ6.defaultProps = {width: 90, height: 48}; addPropertyControls(FramerVD22nWCJ6, {variant: {type: ControlType.Enum, title: "Variant", options: ["R9fGlnvBJ", "Vp5z0P0p2", "pZBABYUn9", "byzXdN3To"], optionTitles: ["Bottom", "Top", "Left", "Right"]}, FRslX1v7e: {type: ControlType.String, title: "Label", defaultValue: "Label", displayTextArea: false}}); export const __FramerMetadata__ = {exports: {default: {type: "reactComponent", slots: [], annotations: {framerSupportedLayoutWidth: "any", framerIntrinsicHeight: "48", framerIntrinsicWidth: "90", framerSupportedLayoutHeight: "any", framerVariables: "{\"FRslX1v7e\":\"label\"}"}}}}; 