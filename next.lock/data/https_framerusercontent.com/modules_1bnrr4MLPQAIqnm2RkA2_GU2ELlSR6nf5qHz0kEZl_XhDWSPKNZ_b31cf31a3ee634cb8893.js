import Label from "https://framerusercontent.com/modules/q59fYZvWsz4EfJw8Q2Qc/o8St92gDc8WASkzqy7qn/NwyX7nBU7.js"; import { Slider } from "https://framerusercontent.com/modules/AHY1z1xp5QsxaZBkEL9H/o8NLGsalwEgMBZJVung6/Slider.js"; import * as React from "react"; import { motion , addPropertyControls , cx , useVariantState , useAddVariantProps , useActiveVariantCallback , withCSS , LayoutGroup , ControlType , Text as Text1 , Stack } from "framer"; const variantClassNames = {QDNE4kOpv: "framer-v-lrws5e"}; const humanReadableVariantMap = {}; const transitions = {default: {type: "spring", ease: [0.44, 0, 0.56, 1], duration: 0.3, delay: 0, stiffness: 500, damping: 60, mass: 1}}; const Component = React.forwardRef(function ({ style, className, layoutId, width, height, variant: outerVariant = "QDNE4kOpv", label: Tk9ccu7cv = "Label", noteLeft: bjYZwKAyd = "0", noteRight: rgu3NsaoH = "100", value: lAxr4_OUi = 50, knob: UR69PAz8S = 30, knob1: G_fy_Hq44 = "Show", showLabel: uaM994bnM = true, showNotes: Qt4rMB6GF = true, animateSlider: UIfnuXtym = false, required: da0L5jA76 = false, color: jfWh4KJyb = "var(--token-334ec294-103c-4e28-a9b8-6b5039fe5924, rgb(0, 153, 255)) /* {\"name\":\"Primary\"} */", track: unWX7aMwh = "var(--token-f463e262-e656-4699-9b0f-08f0bb459b35, rgb(242, 242, 242)) /* {\"name\":\"Background\"} */", knob2: vZxbFS9Ud = "rgb(255, 255, 255)", ...restProps }, ref) { const outerVariantId = humanReadableVariantMap[outerVariant]; const variant = outerVariantId || outerVariant; const { variants, baseVariant, gestureVariant, classNames, transition, setVariant, setGestureState } = useVariantState({defaultVariant: "QDNE4kOpv", variant, transitions, variantClassNames}); const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant); const addVariantProps = useAddVariantProps(baseVariant, gestureVariant, {}); return React.createElement(LayoutGroup, {id: layoutId}, React.createElement(motion.div, {initial: variant, animate: variants, className: cx("framer-gzkUK", classNames), style: {display: "contents"}, onHoverStart: () => { return setGestureState({isHovered: true}); }, onHoverEnd: () => { return setGestureState({isHovered: false}); }, onTapStart: () => { return setGestureState({isPressed: true}); }, onTap: () => { return setGestureState({isPressed: false}); }, onTapCancel: () => { return setGestureState({isPressed: false}); }}, React.createElement(Stack, Object.assign({}, restProps, {layoutId: "QDNE4kOpv", style: {rotate: 0, ...style}, className: cx("framer-lrws5e", className), background: null, direction: "vertical", distribution: "start", alignment: "start", gap: 5, __fromCanvasComponent: true, __contentWrapperStyle: {width: "100%", height: "100%", padding: "0px 0px 0px 0px"}, center: false, "data-highlight": false, transition, ref}, addVariantProps("QDNE4kOpv")), uaM994bnM && React.createElement(motion.div, {layoutId: "NOFiRVMvU-container", style: {rotate: 0}, className: "framer-16dxri-container", transition}, React.createElement(Label, Object.assign({width: "100%", height: "100%", layoutId: "NOFiRVMvU", id: "NOFiRVMvU", label: Tk9ccu7cv, required: da0L5jA76, style: {width: "100%", height: "100%"}, transition}, addVariantProps("NOFiRVMvU")))), React.createElement(motion.div, {layoutId: "uUiVi3Rsx-container", style: {rotate: 0}, className: "framer-1vp47od-container", transition}, React.createElement(Slider, Object.assign({width: "100%", height: "100%", layoutId: "uUiVi3Rsx", id: "uUiVi3Rsx", fillColor: jfWh4KJyb, trackColor: unWX7aMwh, knobColor: vZxbFS9Ud, shadow: "rgba(0, 0, 0, 0.05)", shouldAnimateChange: UIfnuXtym, transition, knobSetting: G_fy_Hq44, constrainKnob: true, knobSize: UR69PAz8S, value: lAxr4_OUi, trackHeight: 6, min: 0, trackRadius: 5, max: 100}, addVariantProps("uUiVi3Rsx")))), Qt4rMB6GF && React.createElement(Stack, Object.assign({layoutId: "NmwBy9r8w", style: {rotate: 0}, className: "framer-cmv8h1", background: null, direction: "horizontal", distribution: "space-between", alignment: "center", gap: 228, __fromCanvasComponent: true, __contentWrapperStyle: {width: "100%", height: "100%", padding: "0px 0px 0px 0px"}, center: false, "data-highlight": false, transition}, addVariantProps("NmwBy9r8w")), React.createElement(Text1, Object.assign({layoutId: "s0U3hvfUx", style: {rotate: 0}, withExternalLayout: true, verticalAlignment: "top", __fromCanvasComponent: true, fonts: ["Inter"], className: "framer-1m2vkk3", rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: rgb(130, 130, 130); font-family: &quot;Inter&quot;, sans-serif; font-size: 14px; letter-spacing: 0px; line-height: 1.2'>0</span><br></div></div>", text: bjYZwKAyd, transition}, addVariantProps("s0U3hvfUx"))), React.createElement(Text1, Object.assign({layoutId: "hUePQwvOP", style: {rotate: 0}, withExternalLayout: true, verticalAlignment: "top", __fromCanvasComponent: true, fonts: ["Inter"], className: "framer-1vebqis", rawHTML: "<div style='font-size: 0; line-height: 0; tab-size: 4; white-space: inherit; word-wrap: inherit'><div style='direction: ltr; font-size: 0'><span style='-webkit-text-fill-color: rgb(130, 130, 130); font-family: &quot;Inter&quot;, sans-serif; font-size: 14px; letter-spacing: 0px; line-height: 1.2'>100</span><br></div></div>", text: rgu3NsaoH, transition}, addVariantProps("hUePQwvOP"))))))); }); const css = `.framer-gzkUK [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none;}\n.framer-gzkUK .framer-lrws5e {position: relative; overflow: visible; width: 261px; height: 74px;}\n.framer-gzkUK .framer-16dxri-container {position: relative; width: 100%; height: 15px; flex-shrink: 0;}\n.framer-gzkUK .framer-1vp47od-container {position: relative; width: 100%; height: 32px; flex-shrink: 0;}\n.framer-gzkUK .framer-cmv8h1 {position: relative; overflow: visible; width: 100%; height: 16px; flex-shrink: 0;}\n.framer-gzkUK .framer-1m2vkk3 {position: relative; overflow: visible; width: auto; height: auto; flex-shrink: 0; white-space: pre;}\n.framer-gzkUK .framer-1vebqis {position: relative; overflow: visible; width: auto; height: auto; flex-shrink: 0; white-space: pre;}`; const FramerXhDWSPKNZ = withCSS(Component, css); export default FramerXhDWSPKNZ; FramerXhDWSPKNZ.displayName = "Slider"; FramerXhDWSPKNZ.defaultProps = {width: 261, height: 74}; addPropertyControls(FramerXhDWSPKNZ, {Tk9ccu7cv: {type: ControlType.String, title: "Label", defaultValue: "Label", displayTextArea: false}, bjYZwKAyd: {type: ControlType.String, title: "Note Left", defaultValue: "0", displayTextArea: false}, rgu3NsaoH: {type: ControlType.String, title: "Note Right", defaultValue: "100", displayTextArea: false}, lAxr4_OUi: {type: ControlType.Number, title: "Value", defaultValue: 50, min: 0, max: 100, step: 1, displayStepper: false}, UR69PAz8S: {type: ControlType.Number, title: "Knob", defaultValue: 30, min: 10, max: 100}, G_fy_Hq44: {type: ControlType.Enum, title: "Knob", options: ["Hide", "Hover", "Show"], displaySegmentedControl: true, defaultValue: "Show"}, uaM994bnM: {type: ControlType.Boolean, title: "Show Label", defaultValue: true}, Qt4rMB6GF: {type: ControlType.Boolean, title: "Show Notes", defaultValue: true}, UIfnuXtym: {type: ControlType.Boolean, title: "Animate Slider", defaultValue: false}, da0L5jA76: {type: ControlType.Boolean, title: "Required", defaultValue: false}, jfWh4KJyb: {type: ControlType.Color, title: "Color", defaultValue: "var(--token-334ec294-103c-4e28-a9b8-6b5039fe5924, rgb(0, 153, 255)) /* {\"name\":\"Primary\"} */"}, unWX7aMwh: {type: ControlType.Color, title: "Track", defaultValue: "var(--token-f463e262-e656-4699-9b0f-08f0bb459b35, rgb(242, 242, 242)) /* {\"name\":\"Background\"} */"}, vZxbFS9Ud: {type: ControlType.Color, title: "Knob", defaultValue: "rgb(255, 255, 255)"}}); export const __FramerMetadata__ = {exports: {default: {type: "reactComponent", slots: [], annotations: {framerVariables: "{\"Tk9ccu7cv\":\"label\",\"bjYZwKAyd\":\"noteLeft\",\"rgu3NsaoH\":\"noteRight\",\"lAxr4_OUi\":\"value\",\"UR69PAz8S\":\"knob\",\"G_fy_Hq44\":\"knob1\",\"uaM994bnM\":\"showLabel\",\"Qt4rMB6GF\":\"showNotes\",\"UIfnuXtym\":\"animateSlider\",\"da0L5jA76\":\"required\",\"jfWh4KJyb\":\"color\",\"unWX7aMwh\":\"track\",\"vZxbFS9Ud\":\"knob2\"}", framerSupportedLayoutWidth: "any", framerIntrinsicHeight: "74", framerSupportedLayoutHeight: "any", framerIntrinsicWidth: "261"}}}}; 